#!/usr/local/bin/perl

use strict;
use warnings;

use Net::LDAP;
use Net::LDAP::Util qw(ldap_explode_dn escape_filter_value);
use Authen::SASL;

our ($ldap_uris, $user_basedn, $group_basedn, $access_group_dn, $admin_group_dn);
require "$ENV{HOME}/ldap.conf.pl";

my $GITOLITE_SHELL = '/usr/local/libexec/gitolite/gitolite-shell';

@ARGV == 1 or die "usage: $0 USERNAME\n";
$ARGV[0] == 'git' or die "This script should only be used for the gitolite user.\n";

my $conn = Net::LDAP->new($ldap_uris, version => '3') or die "$@";
my $sasl = Authen::SASL->new('GSSAPI');
my $status = $conn->bind(sasl => $sasl);
$status->code and die $status->error;

my $search = $conn->search(
  scope  => 'sub',
  base   => $user_basedn,
  filter => "(&(|(objectClass=account)(objectClass=inetOrgPerson))(|(memberOf=$admin_group_dn)(memberOf=$access_group_dn))(sshPublicKey=*))",
  attrs  => ['uid', 'sshPublicKey']);

foreach my $entry ($search->entries) {
  my $uid = ($entry->get_value('uid'))[0];
  foreach my $pubkey ($entry->get_value('sshPublicKey')) {
    next unless rindex($pubkey, 'ssh-', 0) == 0;
    print "command=\"$GITOLITE_SHELL $uid\",restrict $pubkey\n";
  }
}
