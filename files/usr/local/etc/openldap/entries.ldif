dn: ${basedn}
objectClass: dcObject
objectClass: organization
dc: $(rdn "$basedn")
o: ${organization}

dn: ${accounts_basedn}
objectClass: organizationalUnit
ou: $(rdn "$accounts_basedn")

dn: ${people_basedn}
objectClass: organizationalUnit
ou: $(rdn "$people_basedn")

dn: ${robots_basedn}
objectClass: organizationalUnit
ou: $(rdn "$robots_basedn")

dn: ${hosts_basedn}
objectClass: organizationalUnit
ou: $(rdn "$hosts_basedn")

dn: ${services_basedn}
objectClass: organizationalUnit
ou: $(rdn "$services_basedn")

dn: ${groups_basedn}
objectClass: organizationalUnit
ou: $(rdn "$groups_basedn")

dn: ${private_groups_basedn}
objectClass: organizationalUnit
ou: $(rdn "$private_groups_basedn")

dn: ${roles_basedn}
objectClass: organizationalUnit
ou: $(rdn "$roles_basedn")

dn: ${automount_basedn}
objectClass: organizationalUnit
ou: $(rdn "$automount_basedn")

dn: ${sudo_basedn}
objectClass: organizationalUnit
ou: $(rdn "$sudo_basedn")

dn: ${dns_basedn}
objectClass: organizationalUnit
ou: $(rdn "$dns_basedn")

dn: ${kdc_basedn}
objectClass: organizationalUnit
ou: $(rdn "$dns_basedn")

dn: dc=${domain},${dns_basedn}
objectClass: dNSDomain
objectClass: domainRelatedObject
dc: ${domain}
${pdns_soa_record}
${pdns_ns_records}
$(echo "$slapd_server_ids" | awk '{print "aRecord: "$2}')
associatedDomain: ${domain}

$(for zone in $reverse_dns_zones; do echo "\
dn: dc=${zone},${dns_basedn}
objectClass: dNSDomain
objectClass: domainRelatedObject
${pdns_soa_record}
${pdns_ns_records}
associatedDomain: ${zone}
"; done)

dn: dc=_ldap._tcp,dc=${domain},${dns_basedn}
objectClass: dNSDomain2
objectClass: domainRelatedObject
associatedDomain: _ldap._tcp.${domain}
$(printf "sRVRecord: 0 100 389 %s.${domain}\n" ${idm_servers})

dn: dc=_ldaps._tcp,dc=${domain},${dns_basedn}
objectClass: dNSDomain2
objectClass: domainRelatedObject
associatedDomain: _ldaps._tcp.${domain}
$(printf "sRVRecord: 0 100 636 %s.${domain}\n" ${idm_servers})

dn: dc=_kerberos._udp,dc=${domain},${dns_basedn}
objectClass: dNSDomain2
objectClass: domainRelatedObject
associatedDomain: _kerberos._udp.${domain}
$(printf "sRVRecord: 0 100 88 %s.${domain}\n" ${idm_servers})

dn: dc=_kerberos._tcp,dc=${domain},${dns_basedn}
objectClass: dNSDomain2
objectClass: domainRelatedObject
associatedDomain: _kerberos._tcp.${domain}
$(printf "sRVRecord: 0 100 88 %s.${domain}\n" ${idm_servers})

dn: dc=_kerberos-adm._tcp,dc=${domain},${dns_basedn}
objectClass: dNSDomain2
objectClass: domainRelatedObject
associatedDomain: _kerberos-adm._tcp.${domain}
$(printf "sRVRecord: 0 100 749 %s.${domain}\n" ${idm_servers})

dn: dc=_kpasswd._udp,dc=${domain},${dns_basedn}
objectClass: dNSDomain2
objectClass: domainRelatedObject
associatedDomain: _kpasswd._udp.${domain}
$(printf "sRVRecord: 0 100 464 %s.${domain}\n" ${idm_servers})

dn: dc=_kerberos,dc=${domain},${dns_basedn}
objectClass: dNSDomain2
objectClass: domainRelatedObject
associatedDomain: _kerberos.${domain}
tXTRecord: ${realm}

dn: uid=${idm_boxconf_user},${robots_basedn}
objectClass: account
objectClass: posixAccount
objectClass: krb5KDCEntry
objectClass: ldapPublicKey
uid: ${idm_boxconf_user}
cn: ${idm_boxconf_user}
uidNumber: ${idm_boxconf_uid}
gidNumber: ${idm_boxconf_uid}
homeDirectory: /nonexistent
loginShell: /bin/sh
gecos: Boxconf Pseudo-User
userPassword: {SASL}${idm_boxconf_user}@${realm}
krb5PrincipalName: ${idm_boxconf_user}@${realm}
krb5KeyVersionNumber: 0
krb5MaxLife: ${idm_boxconf_ticket_lifetime}
krb5MaxRenew: ${idm_boxconf_renew_lifetime}
krb5KDCFlags: ${idm_boxconf_princ_flags}

dn: cn=${idm_boxconf_user},${private_groups_basedn}
objectClass: groupOfMembers
objectClass: posixGroup
gidNumber: ${idm_boxconf_uid}
member: uid=${idm_boxconf_user},${robots_basedn}

dn: cn=${idm_admin_group},${groups_basedn}
objectClass: groupOfMembers
objectClass: posixGroup
gidNumber: ${idm_admin_gid}
member: uid=${idm_boxconf_user},${robots_basedn}

dn: cn=${idm_admin_group}-all,${sudo_basedn}
objectClass: sudoRole
cn: ${idm_admin_group}-all
sudoUser: %${idm_admin_group}
sudoHost: ALL
sudoCommand: ALL
sudoRunAsUser: ALL
sudoRunAsGroup: ALL

dn: cn=boxconf-all-nopasswd,${sudo_basedn}
objectClass: sudoRole
cn: boxconf-all-nopasswd
sudoUser: ${idm_boxconf_user}
sudoHost: ALL
sudoCommand: ALL
sudoRunAsUser: ALL
sudoRunAsGroup: ALL
sudoOption: !authenticate
sudoOrder: 99
