#!/bin/sh

: ${gitolite_user:='s-gitolite'}
: ${gitolite_access_role:='gitolite-access'}
: ${gitolite_admin_role:='gitolite-admin'}
: ${cgit_clone_urls:="https://${fqdn} ssh://git@${fqdn}"}
: ${cgit_root_title:="${organization} Git Repo"}
: ${cgit_root_desc:="Source code for various ${organization} projects."}
: ${cgit_pygments_style:='default'}
: ${cgit_cache_size:='16000'}

git_tls_cert=/usr/local/etc/nginx/git.crt
git_tls_key=/usr/local/etc/nginx/git.key
git_keytab="${keytab_dir}/git.keytab"
gitolite_local_user=git
gitolite_home=/usr/local/git
gitolite_client_keytab="${keytab_dir}/git-client.keytab"
gitolite_fcgiwrap_socket=/var/run/fcgiwrap/gitolite.sock
cgit_cache_dir=/var/cache/cgit
cgit_fcgiwrap_socket=/var/run/fcgiwrap/cgit.sock
cgit_webroot=/usr/local/www/cgit

# Install packages.
pkg install -y   \
  nginx          \
  cgit           \
  gitolite       \
  fcgiwrap       \
  p5-perl-ldap   \
  p5-Authen-SASL \
  py39-pygments  \
  py39-docutils  \
  py39-markdown

# Create ZFS dataset for gitolite repositories.
create_dataset -o "mountpoint=$gitolite_home" "${state_dataset}/git"

# Set ownership on gitolite dataset.
install_directory -o "$gitolite_local_user" -g "$gitolite_local_user" -m 0700 "$gitolite_home"

# Add www user to git group, so it can read git repositories.
pw groupmod "$gitolite_local_user" -m www

# Create gitolite user account.
create_robot                \
  -c "Gitolite Pseudo-User" \
  "$gitolite_user"

# Get keytab for gitolite user.
get_keytab                  \
  -o root                   \
  -g "$gitolite_local_user" \
  -m 0640                   \
  "$gitolite_client_keytab" \
  "$gitolite_user"

# Generate gitolite configuration.
install_directory -o "$gitolite_local_user" -g "$gitolite_local_user" -m 0750 \
  "$gitolite_home"                                                            \
  "${gitolite_home}/.gitolite"                                                \
  "${gitolite_home}/.gitolite/conf"                                           \
  "${gitolite_home}/.gitolite/logs"
install_file -o "$gitolite_local_user" -g "$gitolite_local_user" -m 0600 "${gitolite_home}/.gitolite.rc"

[ -f "${gitolite_home}/.gitolite/conf/gitolite.conf" ] \
  || install_template -o "$gitolite_local_user" -g "$gitolite_local_user" -m 0640 "${gitolite_home}/.gitolite/conf/gitolite.conf"

[ -f "${gitolite_home}/.gitolite/conf/gitolite.conf-compiled.pm" ] \
  || su "$gitolite_local_user" -c 'gitolite setup'

install_file -m 0555                         \
  /usr/local/libexec/gitolite-grouplist      \
  /usr/local/libexec/gitolite-authorizedkeys

install_template -o "$gitolite_local_user" -g "$gitolite_local_user" -m 0644 "${gitolite_home}/ldap.conf.pl"

# Generate cgit configuration.
install_template -m 0644 /usr/local/etc/cgitrc
install_template -m 0555 /usr/local/lib/cgit/filters/syntax-highlighting-custom.py

# Create cgit cache directory.
install_directory -o root -g www -m 0770 "$cgit_cache_dir"

# Copy custom assets.
install_file -m 0644                   \
  "${cgit_webroot}/custom-style.css"   \
  "${cgit_webroot}/custom-favicon.ico" \
  "${cgit_webroot}/custom-logo.png"    \
  "${cgit_webroot}/custom-robots.txt"

# Copy TLS certificate for nginx.
install_certificate     -m 0644 "$fqdn" "$git_tls_cert"
install_certificate_key -m 0600 "$fqdn" "$git_tls_key"

# Generate nginx configuration.
install_file -m 0644 /usr/local/etc/nginx/fastcgi_params
install_template -m 0644           \
  /usr/local/etc/nginx/nginx.conf  \
  /usr/local/etc/nginx/vhosts.conf

# Create HTTP service principal and keytab.
create_service "HTTP/${fqdn}"
get_keytab        \
  -m 0640         \
  -o root         \
  -g www          \
  "$git_keytab"   \
  "HTTP/${fqdn}"

# Generate sshd configuration.
install_template -m 0600 /etc/ssh/sshd_config.d/gitolite.conf

# Enable and start daemons.
sysrc -v                                                      \
  nginx_enable=YES                                            \
  fcgiwrap_enable=YES                                         \
  fcgiwrap_profiles+='cgit gitolite'                          \
  fcgiwrap_cgit_flags='-f'                                    \
  fcgiwrap_cgit_user=www                                      \
  fcgiwrap_cgit_group=www                                     \
  fcgiwrap_cgit_socket_owner=www                              \
  fcgiwrap_cgit_socket_group=www                              \
  fcgiwrap_cgit_socket="unix:${cgit_fcgiwrap_socket}"         \
  fcgiwrap_gitolite_flags='-f'                                \
  fcgiwrap_gitolite_user="$gitolite_local_user"               \
  fcgiwrap_gitolite_group="$gitolite_local_user"              \
  fcgiwrap_gitolite_socket_owner=www                          \
  fcgiwrap_gitolite_socket_group=www                          \
  fcgiwrap_gitolite_socket="unix:${gitolite_fcgiwrap_socket}" \
  kstart_instances+=gitolite                                  \
  kstart_gitolite_keytab="$gitolite_client_keytab"            \
  kstart_gitolite_flags="-aLK 120 -g ${gitolite_local_user} -o ${gitolite_local_user} -k /tmp/krb5cc_$(id -u "$gitolite_local_user") -u ${gitolite_user}"

for svc in kstart nginx fcgiwrap sshd; do
  service "$svc" restart
done

# Create roles.
create_role               \
  "$gitolite_access_role" \
  "$gitolite_admin_role"
